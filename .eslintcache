[{"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/store/store.ts":"1","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/store/actionTypes.ts":"2","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/index.tsx":"3","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/App.tsx":"4","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/helpers/animation.ts":"5","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostCard/Postcard.tsx":"6","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/SearchResult.tsx":"7","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/FinalCreatePost/FinalCreatePost.tsx":"8","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/Home.tsx":"9","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/CreateButton.tsx":"10","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/helpers/apiClient.ts":"11","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Discover/Discover.tsx":"12","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/store/reducer.ts":"13","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostCard/mockCard.ts":"14","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/Tile/Tile.tsx":"15","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Logo/Logo.tsx":"16","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/AboutUs/AboutUs.tsx":"17","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostDetails/PostDetails.tsx":"18","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/Hero/Hero.tsx":"19","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/Nav/Nav.tsx":"20","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostDetails/CommentCard.tsx":"21","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/ChannelsInfo/ChannelsInfo.tsx":"22","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Dashboard/CreateChannel/CreateChannel.tsx":"23","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Dashboard/SideBar/SideBar.tsx":"24","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Channel/Channel.tsx":"25","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Dashboard/Dashboard.tsx":"26"},{"size":475,"mtime":1607009118513,"results":"27","hashOfConfig":"28"},{"size":222,"mtime":1606916011853,"results":"29","hashOfConfig":"28"},{"size":888,"mtime":1606982222894,"results":"30","hashOfConfig":"28"},{"size":1460,"mtime":1607013980643,"results":"31","hashOfConfig":"28"},{"size":3448,"mtime":1606981980257,"results":"32","hashOfConfig":"28"},{"size":3774,"mtime":1607009118508,"results":"33","hashOfConfig":"28"},{"size":1430,"mtime":1606916011847,"results":"34","hashOfConfig":"28"},{"size":3187,"mtime":1607013230626,"results":"35","hashOfConfig":"28"},{"size":527,"mtime":1606981980254,"results":"36","hashOfConfig":"28"},{"size":1626,"mtime":1606984879015,"results":"37","hashOfConfig":"28"},{"size":2869,"mtime":1606998656972,"results":"38","hashOfConfig":"28"},{"size":1834,"mtime":1606840123838,"results":"39","hashOfConfig":"28"},{"size":1457,"mtime":1606985926134,"results":"40","hashOfConfig":"28"},{"size":1373,"mtime":1606987688136,"results":"41","hashOfConfig":"28"},{"size":1216,"mtime":1606990212043,"results":"42","hashOfConfig":"28"},{"size":1039,"mtime":1606840123845,"results":"43","hashOfConfig":"28"},{"size":3221,"mtime":1606981980249,"results":"44","hashOfConfig":"28"},{"size":5929,"mtime":1607011853268,"results":"45","hashOfConfig":"28"},{"size":2215,"mtime":1606981980253,"results":"46","hashOfConfig":"28"},{"size":719,"mtime":1606981980255,"results":"47","hashOfConfig":"28"},{"size":1045,"mtime":1607005453796,"results":"48","hashOfConfig":"28"},{"size":2360,"mtime":1606981980252,"results":"49","hashOfConfig":"28"},{"size":3444,"mtime":1607009743978,"results":"50","hashOfConfig":"28"},{"size":4312,"mtime":1607013898923,"results":"51","hashOfConfig":"28"},{"size":2064,"mtime":1607014076592,"results":"52","hashOfConfig":"28"},{"size":1136,"mtime":1607009118505,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hy42b1",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/store/store.ts",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/store/actionTypes.ts",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/index.tsx",[],["114","115","116","117","118","119","120","121"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/App.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/helpers/animation.ts",[],["122","123","124","125","126","127","128","129"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostCard/Postcard.tsx",["130","131","132","133","134"],"import { Container, Box, IconButton } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { BsFillBookmarksFill, BsChevronDown } from 'react-icons/bs';\nimport { HiOutlinePlus } from 'react-icons/hi';\nimport * as apiclient from '../../helpers/apiClient';\nimport { mockPost } from './mockCard';\nimport './Postcard.scss';\n\n// interface Props {\n//   // post: Post\n\n// }\n\nconst Postcard: React.FC = () => {\n  // TODO pass down post as prop and get username\n  // (state or getUser via userId saved on post?)\n  const post: Post = mockPost;\n\n  // const [post, setPost] = useState<Post>({})\n  const [savePost, setSavePost] = useState<boolean>(false);\n  const [author, setAuthor] = useState<User>({\n    id: 'c42a1eb1-129e-452e-9363-acea5f9b2d7c',\n    discogsId: 0,\n    username: 'Manji',\n    avatarUrl: '',\n    wantsUrl: '',\n    collectionUrl: '',\n    posts: [],\n    channels: [],\n    comments: [],\n  });\n\n  const history = useHistory();\n  const date = moment(post.createdAt).format('lll');\n\n  useEffect(() => {\n    // async function getPost() {\n    //   const result= apiclient.getPost(postId);\n    //   setPost(await result);\n    // }\n    // getPost();\n    // async function getAuthor() {\n    //   const result= apiclient.getUser(post.userId);\n    //   setAuthor(await result);\n    // }\n    // getAuthor();\n  }, [post.userId]);\n\n  function handleComments() {\n    console.log('toggle the comments');\n  }\n\n  function handleSave() {\n    console.log('toggle saving post');\n    if (!savePost) {\n      apiclient.savePost(author.id, post.id);\n    } else {\n      console.log('delete post from My List');\n      apiclient.removeSavedPost(author.id, post.id);\n    }\n    setSavePost(!savePost);\n  }\n\n  return (\n    <Container\n      border=\"1px solid #d2d2d2\"\n      w=\"90%\"\n      display=\"flex\"\n      flexDir=\"column\"\n      marginY=\"1.5rem\"\n    >\n      <div className=\"message_date\">{date}</div>\n      <div className=\"message_tile\">\n        <div\n          className=\"tile_image\"\n          onClick={() => history.push(`/post/${post.id}`)}\n          aria-hidden=\"true\"\n        >\n          <img src={post.thumbnail} alt=\"release\" />\n        </div>\n        <div className=\"tile_info\">\n          {post.title && <Box isTruncated>Title: {post.title}</Box>}\n          {post.artist && <Box isTruncated>Artist: {post.artist} </Box>}\n          {post.label && <Box isTruncated>Label: {post.label}</Box>}\n          {post.year && <Box isTruncated>Year: {post.year}</Box>}\n        </div>\n        {!savePost ? (\n          <IconButton\n            aria-label=\"Add to List\"\n            icon={<HiOutlinePlus />}\n            position=\"relative\"\n            top=\"-10px\"\n            right=\"-15px\"\n            onClick={handleSave}\n          />\n        ) : (\n          <IconButton\n            aria-label=\"Add to List\"\n            icon={<BsFillBookmarksFill />}\n            position=\"relative\"\n            top=\"-10px\"\n            right=\"-15px\"\n            onClick={handleSave}\n          />\n        )}\n      </div>\n\n      <div className=\"message_content\">\n        <div className=\"message_title\">{post.title}</div>\n        <Box className=\"message_body\" noOfLines={5}>\n          {post.body}\n        </Box>\n\n        <div className=\"message_stats\">\n          <div className=\"stats_comments\">\n            <IconButton\n              size=\"sm\"\n              aria-label=\"See comments\"\n              icon={<BsChevronDown />}\n              onClick={handleComments}\n            />\n            {post.comments.length} comments\n          </div>\n          <div className=\"stats_author\">\n            Posted by <b>{author.username}</b>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Postcard;\n",["135","136","137","138","139","140","141","142"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/SearchResult.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/FinalCreatePost/FinalCreatePost.tsx",["143"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/Home.tsx",[],["144","145","146","147","148","149","150","151"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/CreateButton.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/helpers/apiClient.ts",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Discover/Discover.tsx",[],["152","153","154","155","156","157","158","159"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/store/reducer.ts",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostCard/mockCard.ts",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/CreatePost/Tile/Tile.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Logo/Logo.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/AboutUs/AboutUs.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostDetails/PostDetails.tsx",["160","161"],"import { useSelector } from 'react-redux';\nimport {\n  Container,\n  Box,\n  IconButton,\n  Textarea,\n  Button,\n  Text,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { BsFillBookmarksFill } from 'react-icons/bs';\nimport { HiOutlinePlus } from 'react-icons/hi';\nimport * as apiclient from '../../helpers/apiClient';\nimport CommentCard from './CommentCard';\nimport '../PostCard/Postcard.scss';\n\ninterface Props {\n  postId: string;\n}\n\nconst Postdetails: React.FC<Props> = ({ postId }) => {\n  const user = useSelector<State, User>((state: State) => state.user);\n  const channel = useSelector<State, Channel>((state: State) => state.channel);\n\n  const [post, setPost] = useState<Post>({\n    id: 'ff1aa452-6bc5-41e8-ad10-edff8bbf7058',\n    thumbnail:\n      'https://img.discogs.com/Asuey6O9_gzzOUxgWPAks7kpSsM=/fit-in/600x593/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-12795201-1542094352-6938.jpeg.jpg',\n    title: 'C166 EP',\n    artist: 'JoyHauser',\n    label: 'Terminal M',\n    year: 2018,\n    url: '',\n    postTitle: \"Can't stop listening\",\n    body:\n      'I heard this song on the Monika Kruse Boiler Room Berlin 2016 set and after a little search I found out it was Joyhauser. It is no-nonsense techno and I can recommend to EP to everyone who loves Kruse or Amelie Lens',\n    userId: '3bcdd94b-d460-4d58-8050-c717005c025b',\n    comments: [],\n    tags: [],\n    createdAt: '2020-12-02 16:11:06.13+01',\n    updatedAt: '',\n    channelId: 'ef420411-97de-4fc8-9cf7-cfd5e3effd5e',\n  });\n  const [savePost, setSavePost] = useState<boolean>(false);\n  const [commentBody, setCommentBody] = useState<string>('');\n  const [author, setAuthor] = useState<User>({\n    id: '7fbe4a6a-2973-4b7f-b20f-5ceeda9e3559',\n    discogsId: 0,\n    username: 'Manji',\n    avatarUrl: '',\n    wantsUrl: '',\n    collectionUrl: '',\n    posts: [],\n    channels: [],\n    comments: [],\n  });\n\n  const history = useHistory();\n  const date = moment(post.createdAt).format('lll');\n\n  useEffect(() => {\n    async function getCurrentPost() {\n      const result = await apiclient.getPost(postId);\n      result.comments = result.comments\n        .sort((\n          a: { createdAt: string | number | Date; }, \n          b: { createdAt: string | number | Date; }) =>\n          new Date(b.createdAt).valueOf() -\n          new Date(a.createdAt).valueOf()\n        );\n      setPost(result);\n    }\n    getCurrentPost();\n    // async function getAuthor() {\n    //   const result= await apiclient.getUser(post.userId);\n    //   setAuthor(await result);\n    // }\n    // getAuthor();\n  }, [post.userId, postId]);\n\n  function handleSave() {\n    if (!savePost) {\n      apiclient.savePost(author.id, post.id);\n    } else {\n      apiclient.removeSavedPost(author.id, post.id);\n    }\n    setSavePost(!savePost);\n  }\n\n  function postComment(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    apiclient\n      .createComment(post.id, user.id, commentBody)\n      .then((newComment) => {\n        setCommentBody('');\n        setPost((prev) => {\n          return { ...prev, comments: [newComment, ...prev.comments] };\n        });\n      });\n  }\n\n  function handleChange(\n    e: React.ChangeEvent<HTMLTextAreaElement>,\n    name: string\n  ) {\n    const target = e.target as HTMLTextAreaElement;\n    setCommentBody(target.value);\n  }\n\n  return (\n    <Container w=\"90%\" display=\"flex\" flexDir=\"column\" marginY=\"1.5rem\">\n      <div className=\"message_channel\">#{channel.name}</div>\n      <div className=\"message_date\">{date}</div>\n      <div className=\"message_tile\">\n        <div\n          className=\"tile_image\"\n          onClick={() => history.push(`/post/${post.id}`)}\n          aria-hidden=\"true\"\n        >\n          <img src={post.thumbnail} alt=\"release\" />\n        </div>\n        <div className=\"tile_info\">\n          {post.title && <Box isTruncated>Title: {post.title}</Box>}\n          {post.artist && <Box isTruncated>Artist: {post.artist} </Box>}\n          {post.label && <Box isTruncated>Label: {post.label}</Box>}\n          {post.year && <Box isTruncated>Year: {post.year}</Box>}\n        </div>\n        {!savePost ? (\n          <IconButton\n            aria-label=\"Add to List\"\n            icon={<HiOutlinePlus />}\n            position=\"relative\"\n            top=\"-10px\"\n            right=\"-15px\"\n            onClick={handleSave}\n          />\n        ) : (\n          <IconButton\n            aria-label=\"Add to List\"\n            icon={<BsFillBookmarksFill />}\n            position=\"relative\"\n            top=\"-10px\"\n            right=\"-15px\"\n            onClick={handleSave}\n          />\n        )}\n      </div>\n\n      <div className=\"message_content\">\n        <div className=\"message_title\">{post.title}</div>\n        <Box className=\"message_body\">{post.body}</Box>\n\n        <div className=\"message_stats\">\n          <div className=\"stats_comments\">{post.comments.length} comments</div>\n          <div className=\"stats_author\">\n            Posted by <b>{author.username}</b>\n          </div>\n        </div>\n      </div>\n\n      <form className=\"comment_form\" onSubmit={postComment}>\n        <Text fontSize=\"0.8rem\" color=\"#d3d3d3\">\n          Comment as <span className=\"comment_username\">{user.username}</span>\n        </Text>\n        <Textarea\n          onChange={(e) => handleChange(e, 'comment')}\n          name=\"comment\"\n          value={commentBody}\n          placeholder=\"Share your thoughts\"\n        />\n        <Button type=\"submit\" size=\"xs\">\n          Comment\n        </Button>\n      </form>\n\n      {post.comments && post.comments.length ? (\n        <>\n          {post.comments\n            .map((comment) => (\n              <CommentCard key={comment.id} comment={comment} />\n            ))}\n        </>\n      ) : (\n        <Text>Be the first to comment</Text>\n      )}\n    </Container>\n  );\n};\n\nexport default Postdetails;\n","/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/Hero/Hero.tsx",[],["162","163","164","165","166","167","168","169"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/Nav/Nav.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/PostDetails/CommentCard.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Home/ChannelsInfo/ChannelsInfo.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Dashboard/CreateChannel/CreateChannel.tsx",["170","171","172"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Dashboard/SideBar/SideBar.tsx",["173"],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Channel/Channel.tsx",[],"/Users/mandynijssen/Documents/Codeworks/thesis-project/ongaku/src/components/Dashboard/Dashboard.tsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"174","replacedBy":"190"},{"ruleId":"176","replacedBy":"191"},{"ruleId":"178","replacedBy":"192"},{"ruleId":"180","replacedBy":"193"},{"ruleId":"182","replacedBy":"194"},{"ruleId":"184","replacedBy":"195"},{"ruleId":"186","replacedBy":"196"},{"ruleId":"188","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":23,"column":18,"nodeType":"200","messageId":"201","endLine":23,"endColumn":27},{"ruleId":"202","severity":1,"message":"199","line":23,"column":18,"nodeType":"200","messageId":"201","endLine":23,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":52,"column":5,"nodeType":"205","messageId":"206","endLine":52,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":56,"column":5,"nodeType":"205","messageId":"206","endLine":56,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":60,"column":7,"nodeType":"205","messageId":"206","endLine":60,"endColumn":18},{"ruleId":"174","replacedBy":"207"},{"ruleId":"176","replacedBy":"208"},{"ruleId":"178","replacedBy":"209"},{"ruleId":"180","replacedBy":"210"},{"ruleId":"182","replacedBy":"211"},{"ruleId":"184","replacedBy":"212"},{"ruleId":"186","replacedBy":"213"},{"ruleId":"188","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":29,"column":1,"nodeType":"217","messageId":"218","endLine":29,"endColumn":84},{"ruleId":"174","replacedBy":"219"},{"ruleId":"176","replacedBy":"220"},{"ruleId":"178","replacedBy":"221"},{"ruleId":"180","replacedBy":"222"},{"ruleId":"182","replacedBy":"223"},{"ruleId":"184","replacedBy":"224"},{"ruleId":"186","replacedBy":"225"},{"ruleId":"188","replacedBy":"226"},{"ruleId":"174","replacedBy":"227"},{"ruleId":"176","replacedBy":"228"},{"ruleId":"178","replacedBy":"229"},{"ruleId":"180","replacedBy":"230"},{"ruleId":"182","replacedBy":"231"},{"ruleId":"184","replacedBy":"232"},{"ruleId":"186","replacedBy":"233"},{"ruleId":"188","replacedBy":"234"},{"ruleId":"198","severity":1,"message":"199","line":48,"column":18,"nodeType":"200","messageId":"201","endLine":48,"endColumn":27},{"ruleId":"202","severity":1,"message":"199","line":48,"column":18,"nodeType":"200","messageId":"201","endLine":48,"endColumn":27},{"ruleId":"174","replacedBy":"235"},{"ruleId":"176","replacedBy":"236"},{"ruleId":"178","replacedBy":"237"},{"ruleId":"180","replacedBy":"238"},{"ruleId":"182","replacedBy":"239"},{"ruleId":"184","replacedBy":"240"},{"ruleId":"186","replacedBy":"241"},{"ruleId":"188","replacedBy":"242"},{"ruleId":"202","severity":1,"message":"243","line":50,"column":13,"nodeType":"200","messageId":"201","endLine":50,"endColumn":17},{"ruleId":"202","severity":1,"message":"244","line":50,"column":19,"nodeType":"200","messageId":"201","endLine":50,"endColumn":28},{"ruleId":"202","severity":1,"message":"245","line":50,"column":30,"nodeType":"200","messageId":"201","endLine":50,"endColumn":38},{"ruleId":"203","severity":1,"message":"204","line":59,"column":7,"nodeType":"205","messageId":"206","endLine":59,"endColumn":18},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["248"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["246"],["247"],[],["248"],[],[],[],[],"no-unused-vars","'setAuthor' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","no-console","Unexpected console statement.","MemberExpression","unexpected",["246"],["247"],[],["248"],[],[],[],[],"max-len","This line has a length of 83. Maximum allowed is 80.","Program","max",["246"],["247"],[],["248"],[],[],[],[],["246"],["247"],[],["248"],[],[],[],[],["246"],["247"],[],["248"],[],[],[],[],"'name' is assigned a value but never used.","'isPrivate' is assigned a value but never used.","'parentId' is assigned a value but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements"]
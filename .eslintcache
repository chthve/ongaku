[{"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Redux/Redux.tsx":"1","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Discover/Discover.tsx":"2","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/PostCard/Postcard.tsx":"3","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Discover/GenreTags/GenreTags.tsx":"4","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/CreateChannel/CreateChannel.tsx":"5","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/store/store.ts":"6","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Channel/Channel.tsx":"7","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/apiClient.ts":"8","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/store/reducer.ts":"9","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/store/actionCreators.ts":"10","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/SideBar/SideBar.tsx":"11","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/apiClientServer.ts":"12","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/App.tsx":"13","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/reportWebVitals.ts":"14","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/FinalCreatePost/FinalCreatePost.tsx":"15","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/Home.tsx":"16","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/animation.ts":"17","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/ChannelsInfo/ChannelsInfo.tsx":"18","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/DashboardWelcome/DashboardWelcome.tsx":"19","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/Tile/Tile.tsx":"20","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/ChannelsInfo/ChannelTree/ChannelTree.tsx":"21","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/Dashboard.tsx":"22","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Logo/Logo.tsx":"23","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/AboutUs/AboutUs.tsx":"24","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/SearchDiscogs.tsx":"25","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Login/Login.tsx":"26","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/SearchPost.tsx":"27","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/createPost.tsx":"28","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/PostCard/mockCard.ts":"29","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/config.ts":"30","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/Hero/Hero.tsx":"31","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/onClickRoute.ts":"32","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/SearchResult.tsx":"33"},{"size":2408,"mtime":1607008534116,"results":"34","hashOfConfig":"35"},{"size":2708,"mtime":1607008534113,"results":"36","hashOfConfig":"35"},{"size":3774,"mtime":1607008534114,"results":"37","hashOfConfig":"35"},{"size":434,"mtime":1607008534113,"results":"38","hashOfConfig":"35"},{"size":3780,"mtime":1607014505167,"results":"39","hashOfConfig":"35"},{"size":475,"mtime":1607008534120,"results":"40","hashOfConfig":"35"},{"size":1020,"mtime":1607008534107,"results":"41","hashOfConfig":"35"},{"size":2891,"mtime":1607008534118,"results":"42","hashOfConfig":"35"},{"size":1473,"mtime":1607008534119,"results":"43","hashOfConfig":"35"},{"size":1150,"mtime":1607008534119,"results":"44","hashOfConfig":"35"},{"size":3883,"mtime":1607009581950,"results":"45","hashOfConfig":"35"},{"size":1134,"mtime":1607014198411,"results":"46","hashOfConfig":"35"},{"size":1472,"mtime":1607008687010,"results":"47","hashOfConfig":"35"},{"size":425,"mtime":1606575345258,"results":"48","hashOfConfig":"35"},{"size":3249,"mtime":1607007557169,"results":"49","hashOfConfig":"35"},{"size":527,"mtime":1606931480764,"results":"50","hashOfConfig":"35"},{"size":3448,"mtime":1606931480770,"results":"51","hashOfConfig":"35"},{"size":2360,"mtime":1606931480760,"results":"52","hashOfConfig":"35"},{"size":888,"mtime":1607008534110,"results":"53","hashOfConfig":"35"},{"size":1216,"mtime":1607007557170,"results":"54","hashOfConfig":"35"},{"size":2451,"mtime":1606931480758,"results":"55","hashOfConfig":"35"},{"size":1136,"mtime":1607008534110,"results":"56","hashOfConfig":"35"},{"size":1039,"mtime":1606812900247,"results":"57","hashOfConfig":"35"},{"size":3221,"mtime":1606931480757,"results":"58","hashOfConfig":"35"},{"size":4058,"mtime":1606931480754,"results":"59","hashOfConfig":"35"},{"size":948,"mtime":1606931480766,"results":"60","hashOfConfig":"35"},{"size":4552,"mtime":1606931480788,"results":"61","hashOfConfig":"35"},{"size":709,"mtime":1607008534107,"results":"62","hashOfConfig":"35"},{"size":1373,"mtime":1607007557171,"results":"63","hashOfConfig":"35"},{"size":195,"mtime":1606812921191,"results":"64","hashOfConfig":"35"},{"size":2215,"mtime":1606931480764,"results":"65","hashOfConfig":"35"},{"size":221,"mtime":1606931480770,"results":"66","hashOfConfig":"35"},{"size":1430,"mtime":1606931480755,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h69r3m",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Redux/Redux.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Discover/Discover.tsx",["142"],"import React, { useEffect, useState } from 'react';\nimport './discover.scss';\nimport gsap from 'gsap';\nimport { Link } from 'react-router-dom';\nimport GenreTags from './GenreTags/GenreTags';\nimport {\n  getChannels,\n  subscribeToChannels,\n} from '../../helpers/apiClientServer';\n\ninterface ChannelForDb {\n  id: string;\n  name: string;\n}\n\nconst Discover: React.FC = () => {\n  const [channels, setChannels] = useState<Channel[] | null>(null);\n\n  const [subscribed, setSubscribed] = useState<ChannelForDb[]>([]);\n\n  const handleClick = (id: string, genre: string) => {\n    setSubscribed((prevState) => {\n      if (prevState.find((channel) => channel.id === id)) return prevState;\n\n      return [...prevState, { id, name: genre }];\n    });\n  };\n\n  const handleSubmit = () => {\n    subscribeToChannels('76146c9d-d4da-4ab2-bac7-6bbd94d08a43', subscribed);\n  };\n\n  useEffect(() => {\n    getChannels()\n      .then((channelsReq) => {\n        setChannels(channelsReq);\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        gsap\n          .timeline()\n          .from('.li0', { opacity: 0, duration: 0.2 })\n          .from('.li5', { opacity: 0, duration: 0.2 })\n          .from('.li1', { opacity: 0, duration: 0.2 })\n          .from('.li6', { opacity: 0, duration: 0.2 })\n          .from('.li2', { opacity: 0, duration: 0.2 })\n          .from('.li7', { opacity: 0, duration: 0.2 })\n          .from('.li3', { opacity: 0, duration: 0.2 })\n          .from('.li8', { opacity: 0, duration: 0.2 })\n          .from('.li4', { opacity: 0, duration: 0.2 })\n          .from('.li9', { opacity: 0, duration: 0.2 });\n      });\n  }, []);\n\n  return (\n    <div className=\"discover_container\">\n      <div className=\"discover_header\">\n        <h3>Welcome Ritam</h3>\n      </div>\n      <div className=\"discover_title\">\n        <h4>Discover your channels...</h4>\n      </div>\n\n      <div className=\"genre_container\">\n        <ul className=\"genre_list\">\n          {channels &&\n            channels.map((channel: Channel, i: number) => (\n              <li className={`li${i} genre_list_item`} key={channel.id}>\n                <GenreTags\n                  handleClick={handleClick}\n                  genre={channel.name}\n                  id={channel.id}\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"discover_next\">\n        <Link to=\"/dashboard\">\n          <button\n            className=\"genre_tag_button\"\n            style={{ color: ' black', backgroundColor: 'white ' }}\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            Next\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Discover;\n",["143","144","145","146","147","148","149","150"],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/PostCard/Postcard.tsx",["151","152","153","154","155"],"import { Container, Box, IconButton } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { BsFillBookmarksFill, BsChevronDown } from 'react-icons/bs';\nimport { HiOutlinePlus } from 'react-icons/hi';\nimport * as apiclient from '../../helpers/apiClient';\nimport { mockPost } from './mockCard';\nimport './Postcard.scss';\n\n// interface Props {\n//   // post: Post\n\n// }\n\nconst Postcard: React.FC = () => {\n  // TODO pass down post as prop and get username\n  // (state or getUser via userId saved on post?)\n  const post: Post = mockPost;\n\n  // const [post, setPost] = useState<Post>({})\n  const [savePost, setSavePost] = useState<boolean>(false);\n  const [author, setAuthor] = useState<User>({\n    id: 'c42a1eb1-129e-452e-9363-acea5f9b2d7c',\n    discogsId: 0,\n    username: 'Manji',\n    avatarUrl: '',\n    wantsUrl: '',\n    collectionUrl: '',\n    posts: [],\n    channels: [],\n    comments: [],\n  });\n\n  const history = useHistory();\n  const date = moment(post.createdAt).format('lll');\n\n  useEffect(() => {\n    // async function getPost() {\n    //   const result= apiclient.getPost(postId);\n    //   setPost(await result);\n    // }\n    // getPost();\n    // async function getAuthor() {\n    //   const result= apiclient.getUser(post.userId);\n    //   setAuthor(await result);\n    // }\n    // getAuthor();\n  }, [post.userId]);\n\n  function handleComments() {\n    console.log('toggle the comments');\n  }\n\n  function handleSave() {\n    console.log('toggle saving post');\n    if (!savePost) {\n      apiclient.savePost(author.id, post.id);\n    } else {\n      console.log('delete post from My List');\n      apiclient.removeSavedPost(author.id, post.id);\n    }\n    setSavePost(!savePost);\n  }\n\n  return (\n    <Container\n      border=\"1px solid #d2d2d2\"\n      w=\"90%\"\n      display=\"flex\"\n      flexDir=\"column\"\n      marginY=\"1.5rem\"\n    >\n      <div className=\"message_date\">{date}</div>\n      <div className=\"message_tile\">\n        <div\n          className=\"tile_image\"\n          onClick={() => history.push(`/post/${post.id}`)}\n          aria-hidden=\"true\"\n        >\n          <img src={post.thumbnail} alt=\"release\" />\n        </div>\n        <div className=\"tile_info\">\n          {post.title && <Box isTruncated>Title: {post.title}</Box>}\n          {post.artist && <Box isTruncated>Artist: {post.artist} </Box>}\n          {post.label && <Box isTruncated>Label: {post.label}</Box>}\n          {post.year && <Box isTruncated>Year: {post.year}</Box>}\n        </div>\n        {!savePost ? (\n          <IconButton\n            aria-label=\"Add to List\"\n            icon={<HiOutlinePlus />}\n            position=\"relative\"\n            top=\"-10px\"\n            right=\"-15px\"\n            onClick={handleSave}\n          />\n        ) : (\n          <IconButton\n            aria-label=\"Add to List\"\n            icon={<BsFillBookmarksFill />}\n            position=\"relative\"\n            top=\"-10px\"\n            right=\"-15px\"\n            onClick={handleSave}\n          />\n        )}\n      </div>\n\n      <div className=\"message_content\">\n        <div className=\"message_title\">{post.title}</div>\n        <Box className=\"message_body\" noOfLines={5}>\n          {post.body}\n        </Box>\n\n        <div className=\"message_stats\">\n          <div className=\"stats_comments\">\n            <IconButton\n              size=\"sm\"\n              aria-label=\"See comments\"\n              icon={<BsChevronDown />}\n              onClick={handleComments}\n            />\n            {post.comments.length} comments\n          </div>\n          <div className=\"stats_author\">\n            Posted by <b>{author.username}</b>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Postcard;\n",["156","157","158","159","160","161","162","163"],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Discover/GenreTags/GenreTags.tsx",[],["164","165","166","167","168","169","170","171"],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/CreateChannel/CreateChannel.tsx",["172","173","174","175","176"],"import React, { useEffect, useState } from 'react';\nimport {\n  useDisclosure,\n  Input,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Select,\n} from '@chakra-ui/react';\n\nimport {\n  createChannel,\n  getPublicChannels,\n  getChannels,\n} from '../../../helpers/apiClientServer';\n\ninterface Props {\n  showModal: boolean;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateChannel: React.FC<Props> = ({ showModal, setShowModal }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [channels, setChannels] = useState<Channel[]>([]);\n  // const [allChannels, setAllChannels] = useState<Channel[]>([]);\n\n  const initialState = {\n    name: '',\n    parentId: '',\n    isPrivate: false,\n  };\n  const [options, setOptions] = useState(initialState);\n  const handleClose = () => {\n    onClose();\n    setShowModal(false);\n  };\n  const handleChange = (\n    event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>\n  ) => {\n    const { name, value } = event.target;\n\n    setOptions((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    // eslint-disable-next-line no-unused-vars\n    const { name, isPrivate, parentId } = options;\n\n    // const repeated = allChannels.find((channel) => channel.name === name);\n    // if (repeated) return;\n    createChannel('76146c9d-d4da-4ab2-bac7-6bbd94d08a43', options);\n    setOptions(initialState);\n  };\n\n  useEffect(() => {\n    if (showModal) onOpen();\n  }, [showModal, onOpen]);\n\n  useEffect(() => {\n    getChannels().then((channelsReq) => {\n      setChannels(channelsReq);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   getPublicChannels().then((publicChannels) => {\n  //     setAllChannels(publicChannels);\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"create_channel\">\n      <Drawer isOpen={isOpen} onClose={onClose} placement=\"left\" size=\"lg\">\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerHeader>Create a channel</DrawerHeader>\n            <DrawerCloseButton onClick={() => handleClose()} />\n            <form onSubmit={handleSubmit}>\n              <DrawerBody>\n                Channel Title\n                <Input\n                  className=\"search_input\"\n                  id=\"channel_title\"\n                  type=\"text\"\n                  placeholder=\"#\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  value={options.name}\n                />\n                <Select\n                  name=\"isPrivate\"\n                  onChange={handleChange}\n                  placeholder=\"Public\"\n                  value={options.isPrivate.toString()}\n                >\n                  <option value=\"true\">Private</option>\n                </Select>\n                <Select\n                  name=\"parentId\"\n                  onChange={handleChange}\n                  placeholder=\"Genre\"\n                  value={options.parentId}\n                >\n                  {channels &&\n                    channels.map((channel: Channel, i: number) => (\n                      <option key={channel.id} value={channel.id}>\n                        {channel.name}\n                      </option>\n                    ))}\n                </Select>\n              </DrawerBody>\n\n              <DrawerFooter>\n                <button className=\"genre_tag_button\" type=\"submit\">\n                  Create!\n                </button>\n              </DrawerFooter>\n            </form>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default CreateChannel;\n","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/store/store.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Channel/Channel.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/apiClient.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/store/reducer.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/store/actionCreators.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/SideBar/SideBar.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/apiClientServer.ts",["177"],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/App.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/reportWebVitals.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/FinalCreatePost/FinalCreatePost.tsx",["178","179"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Button, Input, Textarea } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport * as apiclient from '../../../helpers/apiClient';\nimport './FinalCreatePost.scss';\nimport vinyl from '../../../assets/vinyl.jpg';\n\n\nexport default function Finalcreatepost() {\n\n  const history = useHistory();\n\n  const selected = useSelector<State, Release >(\n    (state: State) => state.selected);\n  const channel = useSelector<State, Channel >(\n    (state: State) => state.channel);\n  const user = useSelector<State, User >(\n    (state: State) => state.user);\n    \n\n  const [postForm, setPostForm] = useState<FinalPost>({\n    card: selected,\n    message_title: '',\n    message_body: '',\n  });\n\n  function handleChange(\n    e: React.FormEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>, \n    name: string) {\n    const target = e.target as HTMLTextAreaElement ;\n    const newPost: FinalPost = { ...postForm };\n    if (name === 'title') newPost.message_title = target.value;\n    if (name === 'message') newPost.message_body = target.value;\n    setPostForm(newPost);\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    console.log('submitted new post');\n    apiclient.createPost(channel.id, selected, user, postForm );\n    history.push(`/channel/${channel.name}`);\n  }\n\n  return (\n    <div className='FinalPostWrapper'>\n      <div className='FinalPost_Title'>\n        Review your post\n        <Button\n          className='FinalPost_close'\n          onClick={()=> (history.push(`/channel/${channel.name}`))}\n        >\n          X\n        </Button>\n      </div>\n\n      <div className=\"FinalPost_Tile\">\n        {\n          selected.image\n            ? \n              <img src={selected.image} alt='release foto' />\n            :\n              <img src={vinyl} alt='release foto' />\n        }\n        <div className='Tile_Content'>\n          {selected.title && selected.title.length && \n          <Box isTruncated>Title: {selected.title}</Box>}\n          {selected.artists && selected.artists.length && \n          <Box isTruncated>Artist: {selected.artists[0].name} </Box>}\n          {selected.labels && selected.labels.length && \n          <Box isTruncated>Label: {selected.labels[0].name}</Box>}\n          {selected.year && \n          <Box isTruncated>Year: {selected.year}</Box>}\n        </div>\n      </div>\n\n      <form \n        onSubmit={(e) => handleSubmit(e)} \n        className='FinalPost_message'\n      >\n        <Input \n          variant=\"flushed\" \n          placeholder=\"Title\" \n          onChange={(e) => handleChange(e, 'title')}\n          name='title'\n          required \n        />\n        <Textarea \n          placeholder=\"Share the love...\" \n          name='message'\n          onChange={(e) => handleChange(e, 'message')}\n          required \n        />\n        <Button\n          className=\"button-default\"\n          backgroundColor=\"#0f0e0e\"\n          color=\"white\"\n          borderRadius=\"12px\"\n          padding=\"2% 5%\"\n          fontWeight=\"lighter\"\n          mr={3}\n          type='submit'\n        >\n          POST\n        </Button>\n      </form>\n      \n    </div>\n  );\n}\n","/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/Home.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/animation.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/ChannelsInfo/ChannelsInfo.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/DashboardWelcome/DashboardWelcome.tsx",[],["180","181","182","183","184","185","186","187"],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/Tile/Tile.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/ChannelsInfo/ChannelTree/ChannelTree.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Dashboard/Dashboard.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Logo/Logo.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/AboutUs/AboutUs.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/SearchDiscogs.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Login/Login.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/SearchPost.tsx",["188","189"],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/createPost.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/PostCard/mockCard.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/config.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/Home/Hero/Hero.tsx",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/helpers/onClickRoute.ts",[],"/Users/ritamverma/Desktop/Ongaku Thesis/ongaku/src/components/CreatePost/SearchResult.tsx",[],{"ruleId":"190","severity":1,"message":"191","line":38,"column":23,"nodeType":"192","messageId":"193","endLine":38,"endColumn":36},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":23,"column":18,"nodeType":"212","messageId":"213","endLine":23,"endColumn":27},{"ruleId":"214","severity":1,"message":"211","line":23,"column":18,"nodeType":"212","messageId":"213","endLine":23,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":52,"column":5,"nodeType":"192","messageId":"193","endLine":52,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":56,"column":5,"nodeType":"192","messageId":"193","endLine":56,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":60,"column":7,"nodeType":"192","messageId":"193","endLine":60,"endColumn":18},{"ruleId":"194","replacedBy":"215"},{"ruleId":"196","replacedBy":"216"},{"ruleId":"198","replacedBy":"217"},{"ruleId":"200","replacedBy":"218"},{"ruleId":"202","replacedBy":"219"},{"ruleId":"204","replacedBy":"220"},{"ruleId":"206","replacedBy":"221"},{"ruleId":"208","replacedBy":"222"},{"ruleId":"194","replacedBy":"223"},{"ruleId":"196","replacedBy":"224"},{"ruleId":"198","replacedBy":"225"},{"ruleId":"200","replacedBy":"226"},{"ruleId":"202","replacedBy":"227"},{"ruleId":"204","replacedBy":"228"},{"ruleId":"206","replacedBy":"229"},{"ruleId":"208","replacedBy":"230"},{"ruleId":"210","severity":1,"message":"231","line":17,"column":3,"nodeType":"212","messageId":"213","endLine":17,"endColumn":20},{"ruleId":"214","severity":1,"message":"231","line":17,"column":3,"nodeType":"212","messageId":"213","endLine":17,"endColumn":20},{"ruleId":"214","severity":1,"message":"232","line":56,"column":13,"nodeType":"212","messageId":"213","endLine":56,"endColumn":17},{"ruleId":"214","severity":1,"message":"233","line":56,"column":19,"nodeType":"212","messageId":"213","endLine":56,"endColumn":28},{"ruleId":"214","severity":1,"message":"234","line":56,"column":30,"nodeType":"212","messageId":"213","endLine":56,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":8,"column":7,"nodeType":"192","messageId":"193","endLine":8,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":29,"column":1,"nodeType":"237","messageId":"238","endLine":29,"endColumn":84},{"ruleId":"190","severity":1,"message":"191","line":40,"column":5,"nodeType":"192","messageId":"193","endLine":40,"endColumn":16},{"ruleId":"194","replacedBy":"239"},{"ruleId":"196","replacedBy":"240"},{"ruleId":"198","replacedBy":"241"},{"ruleId":"200","replacedBy":"242"},{"ruleId":"202","replacedBy":"243"},{"ruleId":"204","replacedBy":"244"},{"ruleId":"206","replacedBy":"245"},{"ruleId":"208","replacedBy":"246"},{"ruleId":"210","severity":1,"message":"247","line":34,"column":9,"nodeType":"212","messageId":"213","endLine":34,"endColumn":18},{"ruleId":"214","severity":1,"message":"247","line":34,"column":9,"nodeType":"212","messageId":"213","endLine":34,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected","no-native-reassign",["248"],"no-negated-in-lhs",["249"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["250"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'setAuthor' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars",["248"],["249"],[],["250"],[],[],[],[],["248"],["249"],[],["250"],[],[],[],[],"'getPublicChannels' is defined but never used.","'name' is assigned a value but never used.","'isPrivate' is assigned a value but never used.","'parentId' is assigned a value but never used.","max-len","This line has a length of 83. Maximum allowed is 80.","Program","max",["248"],["249"],[],["250"],[],[],[],[],"'isLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements"]